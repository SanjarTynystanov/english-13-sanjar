{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\maximum-english\\\\my-app\\\\src\\\\components\\\\Tests.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Test.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  question: \"What is the capital of England?\",\n  options: [\"Paris\", \"London\", \"Berlin\", \"Rome\"],\n  answer: \"London\"\n}, {\n  question: \"I ____ coffee every morning.\",\n  options: [\"drink\", \"drinks\", \"drinking\", \"drank\"],\n  answer: \"drink\"\n}, {\n  question: \"She has ____ her homework already.\",\n  options: [\"do\", \"did\", \"done\", \"does\"],\n  answer: \"done\"\n}, {\n  question: \"Choose the synonym for 'happy':\",\n  options: [\"sad\", \"joyful\", \"angry\", \"tired\"],\n  answer: \"joyful\"\n}, {\n  question: \"He ____ to the gym yesterday.\",\n  options: [\"go\", \"goes\", \"went\", \"gone\"],\n  answer: \"went\"\n}, {\n  question: \"I have been ____ English for two years.\",\n  options: [\"learn\", \"learning\", \"learns\", \"learned\"],\n  answer: \"learning\"\n}, {\n  question: \"This is the ____ book I've ever read.\",\n  options: [\"interesting\", \"most interesting\", \"more interesting\", \"interested\"],\n  answer: \"most interesting\"\n}, {\n  question: \"Choose the correct form: 'If I ____ rich, I would travel the world.'\",\n  options: [\"am\", \"was\", \"were\", \"be\"],\n  answer: \"were\"\n}, {\n  question: \"He drives ____ than his brother.\",\n  options: [\"carefully\", \"more carefully\", \"most carefully\", \"careful\"],\n  answer: \"more carefully\"\n}, {\n  question: \"What is the plural of 'child'?\",\n  options: [\"childs\", \"childes\", \"children\", \"childrens\"],\n  answer: \"children\"\n}, {\n  question: \"Identify the error: 'She don't like coffee.'\",\n  options: [\"She\", \"don't\", \"like\", \"coffee\"],\n  answer: \"don't\"\n}, {\n  question: \"They ____ dinner when I arrived.\",\n  options: [\"have\", \"had\", \"were having\", \"has\"],\n  answer: \"were having\"\n}, {\n  question: \"Choose the correct word: 'It is ____ hot today.'\",\n  options: [\"much\", \"very\", \"many\", \"more\"],\n  answer: \"very\"\n}, {\n  question: \"He ____ his keys last week.\",\n  options: [\"lose\", \"loses\", \"lost\", \"losing\"],\n  answer: \"lost\"\n}, {\n  question: \"The car was ____ by a mechanic.\",\n  options: [\"repair\", \"repairing\", \"repaired\", \"repairs\"],\n  answer: \"repaired\"\n}, {\n  question: \"She speaks English ____ than me.\",\n  options: [\"good\", \"well\", \"better\", \"best\"],\n  answer: \"better\"\n}, {\n  question: \"What is the opposite of 'buy'?\",\n  options: [\"sell\", \"give\", \"take\", \"borrow\"],\n  answer: \"sell\"\n}, {\n  question: \"Choose the correct sentence:\",\n  options: [\"He can speaks English.\", \"He can speak English.\", \"He can speaking English.\", \"He speaks can English.\"],\n  answer: \"He can speak English.\"\n}, {\n  question: \"Which article is correct: '____ apple a day keeps the doctor away.'\",\n  options: [\"A\", \"An\", \"The\", \"No article\"],\n  answer: \"An\"\n}, {\n  question: \"Identify the tense: 'They have been working for hours.'\",\n  options: [\"Present Simple\", \"Present Continuous\", \"Present Perfect\", \"Present Perfect Continuous\"],\n  answer: \"Present Perfect Continuous\"\n}];\nconst Test = () => {\n  _s();\n  const [score, setScore] = useState(0);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [isFinished, setIsFinished] = useState(false);\n  const handleAnswer = selectedOption => {\n    if (selectedOption === questions[currentQuestion].answer) {\n      setScore(score + 1);\n    }\n    setUserAnswers([...userAnswers, selectedOption]);\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setIsFinished(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"English Level Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !isFinished ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[currentQuestion].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnswer(option),\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Level:\", \" \", score < 8 ? \"A1 - Beginner\" : score < 12 ? \"A2 - Elementary\" : score < 15 ? \"B1 - Intermediate\" : score < 18 ? \"B2 - Upper Intermediate\" : score < 20 ? \"C1 - Advanced\" : \"C2 - Proficiency\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"Bk/jSK/pWGQxDVhnJjI/q1j8jbM=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","questions","question","options","answer","Test","_s","score","setScore","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","isFinished","setIsFinished","handleAnswer","selectedOption","nextQuestion","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/maximum-english/my-app/src/components/Tests.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Test.css';\r\n\r\nconst questions = [\r\n  { question: \"What is the capital of England?\", options: [\"Paris\", \"London\", \"Berlin\", \"Rome\"], answer: \"London\" },\r\n  { question: \"I ____ coffee every morning.\", options: [\"drink\", \"drinks\", \"drinking\", \"drank\"], answer: \"drink\" },\r\n  { question: \"She has ____ her homework already.\", options: [\"do\", \"did\", \"done\", \"does\"], answer: \"done\" },\r\n  { question: \"Choose the synonym for 'happy':\", options: [\"sad\", \"joyful\", \"angry\", \"tired\"], answer: \"joyful\" },\r\n  { question: \"He ____ to the gym yesterday.\", options: [\"go\", \"goes\", \"went\", \"gone\"], answer: \"went\" },\r\n  { question: \"I have been ____ English for two years.\", options: [\"learn\", \"learning\", \"learns\", \"learned\"], answer: \"learning\" },\r\n  { question: \"This is the ____ book I've ever read.\", options: [\"interesting\", \"most interesting\", \"more interesting\", \"interested\"], answer: \"most interesting\" },\r\n  { question: \"Choose the correct form: 'If I ____ rich, I would travel the world.'\", options: [\"am\", \"was\", \"were\", \"be\"], answer: \"were\" },\r\n  { question: \"He drives ____ than his brother.\", options: [\"carefully\", \"more carefully\", \"most carefully\", \"careful\"], answer: \"more carefully\" },\r\n  { question: \"What is the plural of 'child'?\", options: [\"childs\", \"childes\", \"children\", \"childrens\"], answer: \"children\" },\r\n  { question: \"Identify the error: 'She don't like coffee.'\", options: [\"She\", \"don't\", \"like\", \"coffee\"], answer: \"don't\" },\r\n  { question: \"They ____ dinner when I arrived.\", options: [\"have\", \"had\", \"were having\", \"has\"], answer: \"were having\" },\r\n  { question: \"Choose the correct word: 'It is ____ hot today.'\", options: [\"much\", \"very\", \"many\", \"more\"], answer: \"very\" },\r\n  { question: \"He ____ his keys last week.\", options: [\"lose\", \"loses\", \"lost\", \"losing\"], answer: \"lost\" },\r\n  { question: \"The car was ____ by a mechanic.\", options: [\"repair\", \"repairing\", \"repaired\", \"repairs\"], answer: \"repaired\" },\r\n  { question: \"She speaks English ____ than me.\", options: [\"good\", \"well\", \"better\", \"best\"], answer: \"better\" },\r\n  { question: \"What is the opposite of 'buy'?\", options: [\"sell\", \"give\", \"take\", \"borrow\"], answer: \"sell\" },\r\n  { question: \"Choose the correct sentence:\", options: [\"He can speaks English.\", \"He can speak English.\", \"He can speaking English.\", \"He speaks can English.\"], answer: \"He can speak English.\" },\r\n  { question: \"Which article is correct: '____ apple a day keeps the doctor away.'\", options: [\"A\", \"An\", \"The\", \"No article\"], answer: \"An\" },\r\n  { question: \"Identify the tense: 'They have been working for hours.'\", options: [\"Present Simple\", \"Present Continuous\", \"Present Perfect\", \"Present Perfect Continuous\"], answer: \"Present Perfect Continuous\" },\r\n];\r\n\r\nconst Test = () => {\r\n  const [score, setScore] = useState(0);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  const handleAnswer = (selectedOption) => {\r\n    if (selectedOption === questions[currentQuestion].answer) {\r\n      setScore(score + 1);\r\n    }\r\n    setUserAnswers([...userAnswers, selectedOption]);\r\n    const nextQuestion = currentQuestion + 1;\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion);\r\n    } else {\r\n      setIsFinished(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <h1>English Level Test</h1>\r\n      {!isFinished ? (\r\n        <div className=\"question-card\">\r\n          <h2>{questions[currentQuestion].question}</h2>\r\n          <div className=\"options\">\r\n            {questions[currentQuestion].options.map((option, index) => (\r\n              <button key={index} onClick={() => handleAnswer(option)}>\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"result\">\r\n          <h2>Your Score: {score} / {questions.length}</h2>\r\n          <p>\r\n            Level:{\" \"}\r\n            {score < 8\r\n              ? \"A1 - Beginner\"\r\n              : score < 12\r\n              ? \"A2 - Elementary\"\r\n              : score < 15\r\n              ? \"B1 - Intermediate\"\r\n              : score < 18\r\n              ? \"B2 - Upper Intermediate\"\r\n              : score < 20\r\n              ? \"C1 - Advanced\"\r\n              : \"C2 - Proficiency\"}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}